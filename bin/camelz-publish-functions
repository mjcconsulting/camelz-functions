#!/bin/bash
#
# Cross-Account Multi-Environment Landing Zones Framework - Publish Functions
#
# The plan is to move this function inside of the camelz-cli eventually. So, this script will serve
# as documentation for the process until that's done. All functions are currently packaged and then
# uploaded to S3 during the creation of a stack containing Lambda Resources which use the S3Bucket
# Code method, so this isn't actually needed for functions, but again documents the process. This
# is needed to create the BaselineLayer.zip, then convert to Base64, so that can be included inthe
# Baseline-Baseline.yaml Template as the BaselineLayer Lambda LayerVersion.

bindir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
rootdir=${bindir%/*}
srcdir=$rootdir/src
bucketdir=$rootdir/bucket
timestamp=$(date +%Y%M%d-%H%M%S)

echo "Publishing Functions"
echo " - src   : $srcdir"
echo " - bucket: $bucketdir"

pushd $srcdir &> /dev/null
for directory in $(ls -1d */ | sed -E -e '/^[a-z]{1,4}\/$/d;s/\/$//'); do
  echo -n "- $directory... "
  mkdir -p $bucketdir/$directory
  (cd $directory; zip -X -r $bucketdir/$directory/$timestamp.zip ./* > /dev/null)
  md5=$(md5 -q $bucketdir/$directory/$timestamp.zip)
  if [ ! -f $bucketdir/$directory/$md5.zip ]; then
    echo "Published ($md5.zip)"
    mv $bucketdir/$directory/$timestamp.zip $bucketdir/$directory/$md5.zip
  else
    echo "Unchanged"
  fi
  rm -f $bucketdir/$directory/????????-??????.zip
done
popd &> /dev/null

# Create Base64 encoding of the BaselineLayer function zip file
pushd $bucketdir/BaselineLayer &> /dev/null
for zip in *.zip; do
  if [ ! -f $zip.base64 ]; then
    openssl base64 -in $zip -out $zip.base64
  fi
  touch -r $zip $zip.base64
done
popd &> /dev/null
